name: Deploy to AWS ECS Fargate
 
on:
  push:
    branches:
      - dev
  workflow_dispatch:
 
permissions:
  contents: write
 
jobs:
  build-push-deploy:
    name: Build, Push, and Deploy to ECS
    runs-on: ubuntu-latest
 
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
 
      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
 
      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest .
 
      # Step 4: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest
 
      # Step 5: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
 
      # Step 6: Deploy to AWS ECS
      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster todo-cluster --service todo-app-service --force-new-deployment
 
  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    needs: build-push-deploy
    if: failure()
 
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
 
      - name: Rollback to Previous ECS Deployment
        run: |
          LATEST_TASK_DEF=$(aws ecs describe-task-definition --task-definition todo-apps-task --query "taskDefinition.taskDefinitionArn" --output text)
          aws ecs update-service --cluster todo-app-cluster --service todo-app-service --task-definition $LATEST_TASK_DEF
 